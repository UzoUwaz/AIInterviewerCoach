version: '3.8'

services:
  # Frontend application
  frontend:
    build:
      context: .
      target: development
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:8000
    depends_on:
      - postgres
      - redis
    networks:
      - interview-coach-network

  # Production frontend (alternative)
  frontend-prod:
    build:
      context: .
      target: production
    ports:
      - "80:80"
    environment:
      - NODE_ENV=production
    depends_on:
      - backend
    networks:
      - interview-coach-network
    profiles:
      - production

  # Optional backend service (Python FastAPI)
  backend:
    image: python:3.11-slim
    working_dir: /app
    command: >
      sh -c "pip install fastapi uvicorn sqlalchemy psycopg2-binary redis &&
             uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    environment:
      - DATABASE_URL=postgresql://interview_coach:password@postgres:5432/interview_coach_db
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    networks:
      - interview-coach-network
    profiles:
      - backend

  # PostgreSQL database (optional)
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=interview_coach_db
      - POSTGRES_USER=interview_coach
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - interview-coach-network
    profiles:
      - backend

  # Redis for caching and sessions (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - interview-coach-network
    profiles:
      - backend

  # Nginx load balancer (for production scaling)
  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./nginx-lb.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend-prod
    networks:
      - interview-coach-network
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:

networks:
  interview-coach-network:
    driver: bridge